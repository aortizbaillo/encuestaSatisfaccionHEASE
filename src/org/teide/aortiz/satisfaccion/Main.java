/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.teide.aortiz.satisfaccion;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author SALAZI
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form ElegirArchivos
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelExcelGenerica = new javax.swing.JLabel();
        jButtonExcelGenerica = new javax.swing.JButton();
        jTextFieldExcelGenerica = new javax.swing.JTextField();
        jLabelCarpetaCSVs = new javax.swing.JLabel();
        jTextFieldCarpetaCSVs = new javax.swing.JTextField();
        jButtonCarpetaCSVs = new javax.swing.JButton();
        jLabelCarpetaDestino = new javax.swing.JLabel();
        jTextFieldCarpetaDestino = new javax.swing.JTextField();
        jButtonCarpetaDestino = new javax.swing.JButton();
        jButtonProcesarFicherosCSV = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelExcelGenerica.setText("Excel Gen√©rica");

        jButtonExcelGenerica.setText("Buscar");
        jButtonExcelGenerica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcelGenericaActionPerformed(evt);
            }
        });

        jTextFieldExcelGenerica.setText("/Users/antonio/Downloads/Plantilla.xls");
        jTextFieldExcelGenerica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldExcelGenericaActionPerformed(evt);
            }
        });

        jLabelCarpetaCSVs.setText("Carpeta CSVs");

        jTextFieldCarpetaCSVs.setText("/Users/antonio/Downloads/hease");

        jButtonCarpetaCSVs.setText("Buscar");
        jButtonCarpetaCSVs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarpetaCSVsActionPerformed(evt);
            }
        });

        jLabelCarpetaDestino.setText("Carpeta Destino");

        jTextFieldCarpetaDestino.setText("/Users/antonio/Downloads/generados");

        jButtonCarpetaDestino.setText("Buscar");
        jButtonCarpetaDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarpetaDestinoActionPerformed(evt);
            }
        });

        jButtonProcesarFicherosCSV.setText("Procesar Ficheros CSV");
        jButtonProcesarFicherosCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProcesarFicherosCSVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonProcesarFicherosCSV))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelCarpetaDestino, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(jLabelCarpetaCSVs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelExcelGenerica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldExcelGenerica, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonExcelGenerica))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldCarpetaCSVs)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonCarpetaCSVs))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldCarpetaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonCarpetaDestino)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelExcelGenerica, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldExcelGenerica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonExcelGenerica))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCarpetaCSVs, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCarpetaCSVs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCarpetaCSVs))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCarpetaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCarpetaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCarpetaDestino))
                .addGap(18, 18, 18)
                .addComponent(jButtonProcesarFicherosCSV)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExcelGenericaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcelGenericaActionPerformed
        JFileChooser jfc;
        jfc = new JFileChooser();     
        File f = new File(System.getProperty("user.dir")); // obtiene el directorio donde se esta ejecutando el programa
        jfc.setCurrentDirectory(f); // abre el FileChooser en la carpeta que he obtenido en la linea de arriba
        jfc.setFileSelectionMode(JFileChooser.FILES_ONLY); // solo permite elegir ficheros
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos Excel (*.xls)", "xls"); // filtro para que solamente se puedan elegir ficheros con la extension xls
        jfc.setFileFilter(filter); // se utiliza el filtro creado en la linea anterior
        jfc.showOpenDialog(this); // abre la ventana del FileChooser
        File selFile = jfc.getSelectedFile(); // cuando se sale de la ventana del FileChooser sacamos el fichero seleccionado (puede ser null si no se ha selsccionado ninguno)
        if (selFile != null) { // si se ha seleccionado algun fichero...
            jTextFieldExcelGenerica.setText(selFile.getAbsolutePath()); // actualizamos el jTextField correspondiente con la seleccion del usuario
        }
    }//GEN-LAST:event_jButtonExcelGenericaActionPerformed

    private void jButtonCarpetaCSVsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarpetaCSVsActionPerformed
        JFileChooser jfc;
        jfc = new JFileChooser();     
        File f = new File(System.getProperty("user.dir"));
        jfc.setCurrentDirectory(f);
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY); // solo permite elegir carpetas
        jfc.showOpenDialog(this);
        File selFile = jfc.getSelectedFile();
        if (selFile != null) {
            jTextFieldCarpetaCSVs.setText(selFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jButtonCarpetaCSVsActionPerformed

    private void jButtonCarpetaDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarpetaDestinoActionPerformed
        JFileChooser jfc;
        jfc = new JFileChooser();     
        File f = new File(System.getProperty("user.dir"));
        jfc.setCurrentDirectory(f);
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jfc.showOpenDialog(this);
        File selFile = jfc.getSelectedFile();
        if (selFile != null) {
            jTextFieldCarpetaDestino.setText(selFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jButtonCarpetaDestinoActionPerformed

    private void jButtonProcesarFicherosCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProcesarFicherosCSVActionPerformed
        if ((jTextFieldExcelGenerica.getText() != null) && (jTextFieldCarpetaCSVs.getText() != null) && (jTextFieldCarpetaDestino.getText() != null) && 
                !jTextFieldExcelGenerica.getText().equals("") && !jTextFieldCarpetaCSVs.getText().equals("") && !jTextFieldCarpetaDestino.getText().equals("")) { // nos aseguramos de que los campos de texto no estan vacios
            File fileExcelGenerica = new File(jTextFieldExcelGenerica.getText()); // abrimos el fichero de la Excel Generica
            if (fileExcelGenerica.exists()) { // comprobamos si existe el fichero elegido como Excel Generica
                File dirCSVs = new File(jTextFieldCarpetaCSVs.getText()); // abrimos la carpeta donde estan los CSVs
                if (dirCSVs.exists()) { // si la carpeta existe...
                    File dirDestino = new File(jTextFieldCarpetaDestino.getText()); // abrimos la carpeta donde estan los CSVs
                    if (dirDestino.exists()) { // si la carpeta existe...
                        File[] filesCSV = dirCSVs.listFiles(); // obtenemos todos los ficheros que hay en dicha carpeta
                        FileNameExtensionFilter filterCSV = new FileNameExtensionFilter("Archivos CSV (*.txt)", "txt"); // creamos un filtro para solo elegir los ficheros con extension txt
                        for (File fileCSV : filesCSV) { // para cada fichero dentro de la carpeta de CSVs...
                            if (fileCSV.isFile() && filterCSV.accept(fileCSV)) { // si el fichero cumple con el filtro (es *.txt)
                                try {
                                    System.out.println("Fichero: "+fileCSV.getAbsolutePath());
                                    String filenameCSV = fileCSV.getAbsolutePath(); // nos quedamos con su ruta absoluta
                                    String basefilenameCSV = fileCSV.getName(); // por otro lado obtenemos su nombre y solo el nombre, sin incluir la carpeta donde esta
                                    String destinationExcelFile = jTextFieldCarpetaDestino.getText()+File.separator+basefilenameCSV.substring(0, basefilenameCSV.lastIndexOf("."))+".xls"; 
                                    System.out.println("Destino: "+destinationExcelFile);
                                    new Satisfaccion().obtainResults(filenameCSV, fileExcelGenerica.getAbsolutePath(), destinationExcelFile);
                                    //PFC.crearEstadisticas(jTextFieldExcelGenerica.getText(), destinationExcelFile, filenameCSV); // llamo a la funcion que procesa el fichero csv
                                }
                                catch (Exception e) {
                                    JOptionPane.showMessageDialog(this, "Error en la generaci√≥n del Excel\n"+e.getMessage()); 
                                    e.printStackTrace();
                                }
                            }
                        }
                        JOptionPane.showMessageDialog(this, "Proceso Terminado"); 
                    } else { // si la carpeta de Destino no existiera...
                        JOptionPane.showMessageDialog(this, "La carpeta de Destino elegida no existe."); // aviso al usuario
                    }
                } else { // si la carpeta de CSVS no existiera...
                    JOptionPane.showMessageDialog(this, "La carpeta de CSVs elegida no existe."); // aviso al usuario
                }
            } else { // si el fichero Excel Generico no existiera...
                JOptionPane.showMessageDialog(this, "El fichero Excel Generico elegido no existe."); // aviso al usuario
            }
        } else { // si los campos de texto estuvieran vacios...
            JOptionPane.showMessageDialog(this, "Es necesario que los campos de texto esten escritos."); // aviso al usuario
        }
    }//GEN-LAST:event_jButtonProcesarFicherosCSVActionPerformed

    private void jTextFieldExcelGenericaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldExcelGenericaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldExcelGenericaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCarpetaCSVs;
    private javax.swing.JButton jButtonCarpetaDestino;
    private javax.swing.JButton jButtonExcelGenerica;
    private javax.swing.JButton jButtonProcesarFicherosCSV;
    private javax.swing.JLabel jLabelCarpetaCSVs;
    private javax.swing.JLabel jLabelCarpetaDestino;
    private javax.swing.JLabel jLabelExcelGenerica;
    private javax.swing.JTextField jTextFieldCarpetaCSVs;
    private javax.swing.JTextField jTextFieldCarpetaDestino;
    private javax.swing.JTextField jTextFieldExcelGenerica;
    // End of variables declaration//GEN-END:variables
}
